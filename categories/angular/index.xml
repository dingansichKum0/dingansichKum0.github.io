<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>angular on rx-78-kum0</title>
    <link>https://rx-78-kum0.github.io/categories/angular/</link>
    <description>Recent content in angular on rx-78-kum0</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Jul 2019 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://rx-78-kum0.github.io/categories/angular/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Angular自定义双向绑定表单组件</title>
      <link>https://rx-78-kum0.github.io/post/angular/angular%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/post/angular/angular%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/</guid>
      <description>angular的ControlValueAccessor是一个连接表单模型和视图DOM的抽象类接口
使自定义表单组件像原生input一样映射到form表单模型中, 拥有自定义表单组件的form也能使用响应式表单. (也就是使自定义表单组件拥有formControlName属性和ngModel接口.)
毕竟响应式表单才是angular的利器.
ControlValueAccessor export interface ControlValueAccessor { writeValue(obj: any): void; registerOnChange(fn: any): void; registerOnTouched(fn: any): void; setDisabledState?(isDisabled: boolean): void; } writeValue(obj: any): 该方法是接收模版中的ngModel.
writeValue(value: any): void { this._renderer.setProperty(this._elementRef.nativeElement, &amp;#39;value&amp;#39;, value); } registerOnChange(fn: any): void: 该方法是组件接收到 change 事件的回调, 可以用来通知外部达成双向绑定, 即ngModelChange.
registerOnChange(fn: (_: any) =&amp;gt; void): void { this._onChange = fn; } registerOnTouched(fn: any): 接收到 touched 事件的回调.
registerOnTouched(fn: any): void { this._onTouched = fn; } setDisabledState?(isDisabled: boolean): 该方法是组件输入状态 disable &amp;lt;=&amp;gt; enable 变化时的回调。该方法会根据参数值，启用或禁用指定的DOM元素.</description>
    </item>
    
  </channel>
</rss>