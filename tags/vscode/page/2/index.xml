<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vscode on 谟涅摩绪涅📖</title>
    <link>https://rx-78-kum0.github.io/tags/vscode/</link>
    <description>Recent content in vscode on 谟涅摩绪涅📖</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 02 Mar 2019 00:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://rx-78-kum0.github.io/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>nyan</title>
      <link>https://rx-78-kum0.github.io/2020/03/nyan/</link>
      <pubDate>Sat, 14 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/03/nyan/</guid>
      <description>#!/usr/bin/env bash # Print nyan cat # https://github.com/steckel/Git-Nyan-Graph/blob/master/nyan.sh # If you want big animated version: `telnet miku.acm.uiuc.edu` e=&#39;\033&#39; RESET=&amp;quot;$e[0m&amp;quot; BOLD=&amp;quot;$e[1m&amp;quot; CYAN=&amp;quot;$e[0;96m&amp;quot; RED=&amp;quot;$e[0;91m&amp;quot; YELLOW=&amp;quot;$e[0;93m&amp;quot; GREEN=&amp;quot;$e[0;92m&amp;quot; echo if [ $[$RANDOM%2] -eq &amp;quot;0&amp;quot; ]; then echo -en $RED&#39;`·.,¸,.·*·.&#39; echo -e $RESET$BOLD&#39;╭━━━━╮&#39;$RESET echo -en $YELLOW&#39;`·.,¸,.·*·.&#39; echo -e $RESET$BOLD&#39;|::: /\_/\\&#39;$RESET echo -en $GREEN&#39;`·.,¸,.·*·.&#39; echo -e $RESET$BOLD&#39;|:::( ◕ᴥ◕)&#39;$RESET echo -en $CYAN&#39;`·.,¸,.·*·.&#39; echo -e $RESET$BOLD&#39;u-u━━-u--u&#39;$RESET else echo -en $RED&#39;-_-_-_-_-_-_-_&#39; echo -e $RESET$BOLD&#39;,------,&#39;$RESET echo -en $YELLOW&#39;_-_-_-_-_-_-_-&#39; echo -e $RESET$BOLD&#39;| /\_/\\&#39;$RESET echo -en $GREEN&#39;-_-_-_-_-_-_-&#39; echo -e $RESET$BOLD&#39;~|__( ^ .</description>
    </item>
    
    <item>
      <title>浏览器显示emoji</title>
      <link>https://rx-78-kum0.github.io/2020/03/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BAemoji/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/03/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BAemoji/</guid>
      <description>// js 表情emoji转码 // 发送请求时将uft16转为utf-8 function utf16toEntities(str) { var patt = /[\ud800-\udbff][\udc00-\udfff]/g; // 检测utf16字符正则 return str.replace(patt, function(char) { var H, L, code; if (char.length === 2) { H = char.charCodeAt(0); // 取出高位</description>
    </item>
    
    <item>
      <title>interface类型</title>
      <link>https://rx-78-kum0.github.io/2020/03/interface%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/03/interface%E7%B1%BB%E5%9E%8B/</guid>
      <description>Go 语言与鸭子类型的关系 If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck. 如果某个东西长得像鸭子, 像鸭子一样游泳, 像鸭子一样嘎嘎叫, 那它就可以被看成是</description>
    </item>
    
    <item>
      <title>文字超出显示省略号</title>
      <link>https://rx-78-kum0.github.io/2020/03/%E6%96%87%E5%AD%97%E8%B6%85%E5%87%BA%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/03/%E6%96%87%E5%AD%97%E8%B6%85%E5%87%BA%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7/</guid>
      <description>// 文字超出省略号 .text-overflow { overflow: hidden; white-space: nowrap; text-overflow: ellipsis; } // 文字超出两行省略号, block元素 .text-overflow-2 { word-break: break-all; overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 2; line-clamp: 2; -webkit-box-orient: vertical; }</description>
    </item>
    
    <item>
      <title>多线程</title>
      <link>https://rx-78-kum0.github.io/2020/03/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/03/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
      <description>线程: 执行指令序列 保留了并发的优点, 避免了进程切换的代价. 实质: 映射表不变, PC指针变. 价值, 用处 浏览器 一个线程用来从服务器接收数据 一个线程</description>
    </item>
    
    <item>
      <title>多进程</title>
      <link>https://rx-78-kum0.github.io/2020/02/%E5%A4%9A%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/02/%E5%A4%9A%E8%BF%9B%E7%A8%8B/</guid>
      <description>进程: 进行中的程序 进行中的程序与磁盘中的静态程序不一样. 进程是描述一个运行中的程序. 进程 = 资源(映射表) + 多个执行指令序列(线程) 进程只能在</description>
    </item>
    
    <item>
      <title>typescript元编程</title>
      <link>https://rx-78-kum0.github.io/2020/02/typescript%E5%85%83%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/02/typescript%E5%85%83%E7%BC%96%E7%A8%8B/</guid>
      <description>// 硬编码一个二进制 trie type BinaryTrie = [ [ [ [ [[[[0, 1], [2, 3]], [[4, 5], [6, 7]]], [[[8, 9], [10, 11]], [[12, 13], [14, 15]]]], [[[[16, 17], [18, 19]], [[20, 21], [22, 23]]], [[[24, 25], [26, 27]], [[28, 29], [30, 31]]]] ], [ [[[[32, 33], [34, 35]], [[36, 37], [38, 39]]], [[[40, 41], [42, 43]], [[44, 45], [46, 47]]]], [[[[48, 49], [50,</description>
    </item>
    
    <item>
      <title>clang-format</title>
      <link>https://rx-78-kum0.github.io/2020/02/clang-format/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/02/clang-format/</guid>
      <description># .clang-format BasedOnStyle: LLVM Language: Cpp IndentWidth : 2 # 开括号(开圆括号、开尖括号、开方括号)后的对齐: Align, DontAlign, AlwaysBreak(总是在开括号后换行) AlignAfterOpenBracket: Align # 大括号换行，只有当</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://rx-78-kum0.github.io/about/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/about/</guid>
      <description>所有的快乐，其本质都是否定的，而痛苦的本质却是肯定的。</description>
    </item>
    
    <item>
      <title>Hello_World</title>
      <link>https://rx-78-kum0.github.io/2020/01/hello_world/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2020/01/hello_world/</guid>
      <description>Power by Hugo 现在，该博客改由 Hugo 强力驱动啦！ Hugo 是一个 golang 编写的静态网页生成器。同类型工具还有使用 node 编写的 Hexo。 Hugo的优点 - 快 基于 golang 编写的 - 简单</description>
    </item>
    
    <item>
      <title>myclirc</title>
      <link>https://rx-78-kum0.github.io/2019/12/myclirc/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2019/12/myclirc/</guid>
      <description># vi: ft=dosini [main] # Enables context sensitive auto-completion. If this is disabled the all # possible completions will be listed. smart_completion = True # Multi-line mode allows breaking up the sql statements into multiple lines. If # this is set to True, then the end of the statements must have a semi-colon. # If this is set to False then sql statements can&#39;t be split into multiple # lines.</description>
    </item>
    
    <item>
      <title>angular自定义双向绑定表单组件</title>
      <link>https://rx-78-kum0.github.io/2019/07/angular%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2019/07/angular%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/</guid>
      <description>angular的ControlValueAccessor是一个连接表单模型和视图DOM的抽象类接口 .org-center { margin-left: auto; margin-right: auto; text-align: center; } 使自定义表单组件像原生i</description>
    </item>
    
    <item>
      <title>vimrc</title>
      <link>https://rx-78-kum0.github.io/2019/06/vimrc/</link>
      <pubDate>Tue, 04 Jun 2019 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2019/06/vimrc/</guid>
      <description>&amp;quot; .vimrc &amp;quot; Configuration file for vim set modelines=0 &amp;quot; Don&#39;t write backup file if vim is being called by &amp;quot;crontab -e&amp;quot; &amp;quot; au BufWrite /private/tmp/crontab.* set nowritebackup nobackup &amp;quot; Don&#39;t write backup file if vim is being called by &amp;quot;chpass&amp;quot; &amp;quot; au BufWrite /private/etc/pw.* set nowritebackup nobackup set nobackup set nowritebackup let skip_defaults_vim=1 &amp;quot; &amp;lt;leader&amp;gt; let g:mapleader=&amp;quot;,&amp;quot; &amp;quot; 去掉有关vi一致性模式</description>
    </item>
    
    <item>
      <title>一个包含 nil 指针的接口不是 nil 接口</title>
      <link>https://rx-78-kum0.github.io/2019/03/%E4%B8%80%E4%B8%AA%E5%8C%85%E5%90%AB-nil-%E6%8C%87%E9%92%88%E7%9A%84%E6%8E%A5%E5%8F%A3%E4%B8%8D%E6%98%AF-nil-%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Mon, 25 Mar 2019 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2019/03/%E4%B8%80%E4%B8%AA%E5%8C%85%E5%90%AB-nil-%E6%8C%87%E9%92%88%E7%9A%84%E6%8E%A5%E5%8F%A3%E4%B8%8D%E6%98%AF-nil-%E6%8E%A5%E5%8F%A3/</guid>
      <description>golang 接口值: 一个包含 nil 指针的接口不是 nil 接口. 一个不包含任何值的 nil 接口值和一个刚好包含 nil 指针的接口值是不同的. 接口值由两个部分组成: 一个具体的类</description>
    </item>
    
    <item>
      <title>vscode</title>
      <link>https://rx-78-kum0.github.io/2019/03/vscode/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0800</pubDate>
      
      <guid>https://rx-78-kum0.github.io/2019/03/vscode/</guid>
      <description>{ // editor &amp;quot;editor.fontSize&amp;quot;: 14, &amp;quot;editor.snippetSuggestions&amp;quot;: &amp;quot;top&amp;quot;, &amp;quot;editor.formatOnSave&amp;quot;: true, &amp;quot;explorer.confirmDragAndDrop&amp;quot;: true, &amp;quot;explorer.confirmDelete&amp;quot;: false, &amp;quot;editor.detectIndentation&amp;quot;: false, &amp;quot;files.autoSave&amp;quot;: &amp;quot;off&amp;quot;, // &amp;quot;editor.fontFamily&amp;quot;: &amp;quot;&#39;FuraCode&#39;, Menlo, Monaco, &#39;Courier New&#39;, monospace&amp;quot;, &amp;quot;editor.fontLigatures&amp;quot;: true, &amp;quot;workbench.iconTheme&amp;quot;: &amp;quot;material-icon-theme&amp;quot;, &amp;quot;workbench.colorTheme&amp;quot;: &amp;quot;Nebula&amp;quot;, // prettier &amp;quot;prettier.printWidth&amp;quot;: 120, &amp;quot;editor.tabSize&amp;quot;: 2, &amp;quot;prettier.singleQuote&amp;quot;: true, &amp;quot;prettier.semi&amp;quot;: true, // typescript &amp;quot;typescript.updateImportsOnFileMove.enabled&amp;quot;: &amp;quot;always&amp;quot;, // emmet &amp;quot;emmet.includeLanguages&amp;quot;: { &amp;quot;javascript&amp;quot;: &amp;quot;javascriptreact&amp;quot;, &amp;quot;typescript&amp;quot;: &amp;quot;typescriptreact&amp;quot; }, &amp;quot;emmet.triggerExpansionOnTab&amp;quot;: true, // 装饰器 &amp;quot;javascript.implicitProjectConfig.experimentalDecorators&amp;quot;: true, // stylus &amp;quot;stylusSupremacy.insertColons&amp;quot;: false, // 是否插</description>
    </item>
    
  </channel>
</rss>
